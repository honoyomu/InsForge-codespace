openapi: 3.0.3
info:
  title: Insforge Authentication API
  version: 2.0.0
  description: Authentication endpoints with separated auth and profile tables

paths:
  /api/auth/register:
    post:
      summary: Register new user
      description: Creates a new user with separate auth and profile records
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  minLength: 6
                  example: securepassword123
                name:
                  type: string
                  example: John Doe
                id:
                  type: string
                  description: Optional custom user ID
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Auth record ID
                          email:
                            type: string
                          name:
                            type: string
                            description: From profile record
                          avatar_url:
                            type: string
                            nullable: true
                          bio:
                            type: string
                            nullable: true
                      token:
                        type: string
                        description: JWT authentication token
                  meta:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        format: date-time

  /api/auth/login:
    post:
      summary: User login
      description: Authenticates user and returns profile data with token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                          email:
                            type: string
                          name:
                            type: string
                          avatar_url:
                            type: string
                            nullable: true
                          bio:
                            type: string
                            nullable: true
                      token:
                        type: string

  /api/auth/admin/login:
    post:
      summary: Admin login
      description: Authenticates admin user for dashboard access
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Admin login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                          email:
                            type: string
                          name:
                            type: string
                          role:
                            type: string
                            enum: [admin]
                      token:
                        type: string

  /api/auth/me:
    get:
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        type: object

  /api/auth/v1/google-auth:
    get:
      summary: Get Google OAuth authorization URL
      parameters:
        - name: redirect_url
          in: query
          required: false
          schema:
            type: string
            format: uri
          description: Client redirect URL after OAuth completion
      responses:
        '200':
          description: Google OAuth authorization URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      auth_url:
                        type: string

  /api/auth/v1/github-auth:
    get:
      summary: Get GitHub OAuth authorization URL
      parameters:
        - name: redirect_url
          in: query
          required: false
          schema:
            type: string
            format: uri
          description: Client redirect URL after OAuth completion
      responses:
        '200':
          description: Github OAuth authorization URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      auth_url:
                        type: string

  /api/auth/v1/callback:
    get:
      summary: Unified OAuth callback for Google/GitHub
      description: Handles OAuth callbacks from both Google and GitHub providers
      parameters:
        - name: code
          in: query
          required: false
          schema:
            type: string
          description: Authorization code from OAuth provider
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: Base64 encoded state containing client redirect URL and provider info
        - name: token
          in: query
          required: false
          schema:
            type: string
          description: Direct Google ID token (alternative to code)
      responses:
        '302':
          description: Redirect to the final URL with token and user info
          headers:
            Location:
              type: string
              format: uri

  /api/auth/users:
    get:
      summary: List all users
      description: Returns list of users with basic profile info
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
  
  schemas:
    AuthRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        password_hash:
          type: string
          description: SHA256 hash of password
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    ProfileRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
        auth_id:
          type: string
          format: uuid
          description: Foreign key to auth table
        name:
          type: string
        avatar_url:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        metadata:
          type: object
          description: JSONB field for flexible data
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    ErrorResponse:
      type: object
      required:
        - error
        - message
        - statusCode
      properties:
        error:
          type: string
          description: Error code for programmatic handling
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Human-readable error message
          example: "Email is already in use"
        statusCode:
          type: integer
          description: HTTP status code
          example: 400
        nextAction:
          type: string
          description: Suggested action to resolve the error
          example: "Please use a different email address"